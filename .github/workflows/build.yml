name: Build Android APK
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y zlib1g-dev openjdk-17-jdk unzip
        pip install buildozer cython==0.29.36
        
    - name: Setup Android SDK
      run: |
        mkdir -p ~/.buildozer/android/platform/android-sdk/cmdline-tools
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools-linux-9477386_latest.zip -d temp_folder
        mv temp_folder/cmdline-tools ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/
        rm -rf temp_folder
        
        mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
        ln -s ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
        ln -s ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin ~/.buildozer/android/platform/android-sdk/tools/bin
        
        chmod +x ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager
        
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
        sdkmanager --sdk_root=$ANDROID_HOME "build-tools;34.0.0" "platforms;android-33"
        
    - name: Build APK with verbose logging
      run: |
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        
        # Включаем максимальное логирование
        buildozer -v android debug 2>&1 | tee full_build.log
        
        # Проверяем результат
        if [ $? -eq 0 ]; then
          echo "Build successful!"
          ls -la bin/
        else
          echo "Build failed! Full log:"
          cat full_build.log
          
          # Ищем логи в других местах
          echo "=== Searching for logs ==="
          find . -name "*.log" -type f
          find .buildozer -name "*.log" -type f 2>/dev/null || echo "No .buildozer logs found"
          
          exit 1
        fi
        
    - name: Check build logs
      run: |
        echo "=== Buildozer log ==="
        find . -name "*.log" -exec cat {} \; 2>/dev/null || echo "No log files found"
        echo "=== Buildozer directory structure ==="
        find .buildozer -type f 2>/dev/null || echo ".buildozer directory not found"
        
    - name: Find and prepare APK for upload
      run: |
        echo "=== Listing build files ==="
        ls -la 
        ls -la bin/ 2>/dev/null || echo "bin/ directory does not exist - build failed"
        
        # Проверяем существует ли APK
        if [ -d "bin/" ]; then
          APK_FILE=$(find bin/ -name "*.apk" -type f | head -1)
          if [ -n "$APK_FILE" ]; then
            echo "Found APK: $APK_FILE"
            cp "$APK_FILE" app-debug.apk
            ls -la app-debug.apk
          else
            echo "No APK files found in bin/ - build failed"
            exit 1
          fi
        else
          echo "Build directory does not exist - build failed"
          exit 1
        fi
        
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: FTP-Messenger-APK
        path: app-debug.apk
