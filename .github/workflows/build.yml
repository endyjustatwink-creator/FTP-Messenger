name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          autoconf \
          automake \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libsqlite3-dev \
          libffi-dev \
          libssl-dev \
          python3-venv \
          python3-dev \
          build-essential

    - name: Create and activate virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate

    - name: Install exact versions of dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install wheel
        pip install setuptools==65.5.0
        pip install cython==0.29.19
        pip install buildozer
        pip install kivy==2.3.0

    - name: Fix buildozer.spec requirements
      run: |
        # Обновляем requirements в buildozer.spec
        sed -i 's/^requirements = .*/requirements = python3,kivy==2.3.0,openssl,requests,plyer/' buildozer.spec
        echo "Updated requirements in buildozer.spec"

    - name: Build APK with fixed environment
      run: |
        source venv/bin/activate
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        
        echo "=== Buildozer version ==="
        buildozer --version
        
        echo "=== Starting build process ==="
        buildozer -v android debug 2>&1 | tee full_build.log

    - name: Analyze build results
      run: |
        echo "=== Build status ==="
        if [ ${PIPESTATUS[0]} -eq 0 ]; then
          echo "Build completed successfully!"
        else
          echo "Build failed!"
        fi
        
        echo "=== Error analysis ==="
        grep -i "error\|fail\|exception" full_build.log | head -20 || echo "No obvious errors found"
        
        echo "=== APK search ==="
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: full_build.log

    - name: Upload APK if exists
      if: always()
      run: |
        mkdir -p artifacts
        APK_FILES=$(find . -name "*.apk" -type f 2>/dev/null)
        
        if [ -n "$APK_FILES" ]; then
          echo "Found APK files: $APK_FILES"
          cp $APK_FILES artifacts/
          ls -la artifacts/
        else
          echo "No APK files found"
          # Создаем dummy файл чтобы избежать ошибки
          touch artifacts/no-apk.txt
        fi

    - name: Upload APK artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: artifacts/*
