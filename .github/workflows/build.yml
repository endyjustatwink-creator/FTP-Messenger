name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          python3-dev \
          build-essential

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.19
        pip install kivy

    - name: Pre-accept Android licenses
      run: |
        mkdir -p ~/.android
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > ~/.android/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> ~/.android/android-sdk-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> ~/.android/android-sdk-license

    - name: Clean previous builds
      run: |
        buildozer android clean 2>/dev/null || true
        rm -rf .buildozer/android/app/build

    - name: Build APK with forced completion
      run: |
        # Запускаем сборку в фоновом режиме
        buildozer -v android debug 2>&1 | tee full_build.log &
        BUILD_PID=$!
        
        # Ждем 10 минут для основной сборки
        sleep 600
        
        # Если процесс еще работает, пытаемся завершить его и создать APK
        if kill -0 $BUILD_PID 2>/dev/null; then
          echo "Build is taking too long, attempting to complete manually..."
          kill $BUILD_PID 2>/dev/null || true
          
          # Пытаемся запустить финальную стадию сборки
          timeout 300 buildozer android update 2>&1 | tee -a full_build.log || echo "Update failed"
        else
          wait $BUILD_PID
        fi
        
        echo "BUILD_EXIT_CODE=$?" >> $GITHUB_ENV

    - name: Force APK creation
      run: |
        echo "=== Attempting to force APK creation ==="
        
        # Пытаемся найти и собрать APK вручную
        if [ -d ".buildozer/android/app/build" ]; then
          echo "Found build directory, attempting to package APK..."
          
          # Переходим в директорию сборки
          cd .buildozer/android/app
          
          # Пытаемся собрать APK с помощью gradle
          ./gradlew assembleDebug 2>&1 | tee -a ../../../full_build.log || echo "Gradle build failed"
          
          # Ищем APK
          find . -name "*.apk" -type f 2>/dev/null | head -5
          
          cd ../../..
        fi

    - name: Comprehensive APK search
      run: |
        echo "=== Comprehensive APK search ==="
        
        # Ищем во всех возможных местах
        SEARCH_PATHS=(
          "."
          "bin"
          ".buildozer"
          ".buildozer/android/app"
          ".buildozer/android/app/build"
          ".buildozer/android/app/build/outputs/apk"
          "~/.buildozer"
          "/tmp"
        )
        
        for path in "${SEARCH_PATHS[@]}"; do
          echo "Searching in $path:"
          find "$path" -name "*.apk" -type f 2>/dev/null | head -3 || echo "  No APK found"
        done

    - name: Create dummy APK if none found
      run: |
        echo "=== Creating bin directory ==="
        mkdir -p bin
        
        if ! find . -name "*.apk" -type f 2>/dev/null | grep -q .; then
          echo "No APK found anywhere. Creating dummy file for debugging..."
          echo "APK was not generated during build process" > bin/build-error.txt
          echo "Check full_build.log for details" >> bin/build-error.txt
        else
          # Копируем найденные APK в bin/
          find . -name "*.apk" -type f -exec cp {} bin/ \;
          echo "APK files copied to bin/:"
          ls -la bin/
        fi

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: full_build.log

    - name: Upload APK artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*

    - name: Create detailed debug info
      if: failure()
      run: |
        mkdir -p artifacts
        echo "Build exit code: $BUILD_EXIT_CODE" > artifacts/debug-details.txt
        echo "=== Buildozer directory structure ===" >> artifacts/debug-details.txt
        find .buildozer -type d 2>/dev/null | head -20 >> artifacts/debug-details.txt
        
        if [ -f "full_build.log" ]; then
          echo "=== Last 50 lines of build log ===" >> artifacts/debug-details.txt
          tail -50 full_build.log >> artifacts/debug-details.txt
        fi

    - name: Upload debug details
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-details
        path: artifacts/debug-details.txt
