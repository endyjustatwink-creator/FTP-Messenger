name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          python3-dev \
          build-essential

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.19
        pip install kivy

    - name: Pre-accept Android licenses
      run: |
        mkdir -p ~/.android
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > ~/.android/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> ~/.android/android-sdk-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> ~/.android/android-sdk-license

    - name: Build APK
      run: |
        buildozer -v android debug 2>&1 | tee full_build.log
        echo "BUILD_EXIT_CODE=${PIPESTATUS[0]}" >> $GITHUB_ENV

    - name: Search for APK files everywhere
      run: |
        echo "=== Comprehensive APK search ==="
        
        # Ищем во всех возможных местах
        echo "1. Current directory:"
        find . -name "*.apk" -type f 2>/dev/null || echo "  No APK found"
        
        echo "2. Home directory:"
        find ~ -name "*.apk" -type f 2>/dev/null | head -5 || echo "  No APK found"
        
        echo "3. Buildozer directories:"
        find .buildozer -name "*.apk" -type f 2>/dev/null || echo "  No APK in .buildozer"
        
        echo "4. Bin directory:"
        ls -la bin/ 2>/dev/null || echo "  bin/ not found"
        
        echo "5. System temp directories:"
        find /tmp -name "*.apk" -type f 2>/dev/null | head -3 || echo "  No APK in /tmp"
        
        echo "6. All APK files on system:"
        find / -name "*.apk" -type f 2>/dev/null | head -10 || echo "  No APK files anywhere"

    - name: Check buildozer app directory
      run: |
        echo "=== Buildozer app directory structure ==="
        find .buildozer -type f -name "*.apk" 2>/dev/null || echo "No APK files in .buildozer"
        
        echo "=== Android app directory ==="
        find .buildozer/android/app -name "*.apk" 2>/dev/null || echo "No APK in android/app"
        
        echo "=== Platform directory ==="
        find .buildozer/android/platform -name "*.apk" 2>/dev/null || echo "No APK in android/platform"

    - name: Create APK manually if not found
      run: |
        echo "=== Attempting to locate and copy APK ==="
        
        # Ищем APK в различных местах
        APK_PATH=$(find . -name "*.apk" -type f 2>/dev/null | head -1)
        
        if [ -n "$APK_PATH" ]; then
          echo "Found APK at: $APK_PATH"
          mkdir -p bin
          cp "$APK_PATH" bin/
          echo "APK copied to bin/"
          ls -la bin/
        else
          echo "No APK found anywhere. Checking build log for clues..."
          
          if [ -f "full_build.log" ]; then
            echo "=== Build completion check ==="
            grep -i "package\|apk\|build.*complete" full_build.log || echo "No build completion info found"
            
            echo "=== Final steps in log ==="
            tail -20 full_build.log
          fi
          
          # Создаем пустой файл чтобы избежать ошибки
          mkdir -p bin
          touch bin/no-apk-generated.txt
        fi

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: full_build.log

    - name: Upload APK artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*

    - name: Debug info
      if: always()
      run: |
        echo "=== Final directory structure ==="
        ls -la
        echo "=== Buildozer contents ==="
        find .buildozer -type f | head -20 || echo "No .buildozer files"
        
        # Сохраняем информацию для отладки
        mkdir -p artifacts
        echo "Build exit code: $BUILD_EXIT_CODE" > artifacts/debug.txt
        echo "=== APK search results ===" >> artifacts/debug.txt
        find . -name "*.apk" -type f 2>/dev/null >> artifacts/debug.txt

    - name: Upload debug info
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: artifacts/debug.txt
